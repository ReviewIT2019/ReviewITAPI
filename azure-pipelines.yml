# Docker image
# Build a Docker image to deploy, run, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
- group: 'dockerhub niss'
- name: 'imageName'
  value: 'reviewitapi:$(build.buildId)'

steps:
  - script: docker build -f "ReviewITAPI/Dockerfile" -t $(dockerId)/$(imageName) --label "com.reviewitapi.created-by=azure" .
    displayName: 'docker build'
  - script: docker run -d --name dotnetcoreapp -e "ASPNETCORE_URLS=https://+:443;http://+:80" -e "ASPNETCORE_HTTPS_PORT=44362" -e "ASPNETCORE_ENVIRONMENT=Development" -e ASPNETCORE_Kestrel__Certificates__Default__Password="crypticpassword" -e ASPNETCORE_Kestrel__Certificates__Default__Path=/../.aspnet/https/aspnetapp.pfx -p 51395:80 -p 44362:443 reviewitapi
    displayName: 'docker run detached'
  - script: docker cp dotnetcoreapp:app/TestResults $(System.DefaultWorkingDirectory)
    displayName: 'docker copy testresults to azure directory'
  - script: docker stop $(docker ps -aq)
    displayName: 'docker exit'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'
      failTaskOnFailedTests: true
  
  - script: docker login -u $(dockerId) -p $(pswd)
    displayName: 'docker login'
  - script: docker push $(dockerId)/$(imageName)
    displayName: 'dockerhub publish'